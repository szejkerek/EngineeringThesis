name: Run Unity Tests
on: [push]

jobs:
 testAllModes:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - test-project
        testMode:
          - playmode
          - editmode
          - standalone

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          lfs: true
      - name: Copy Project
        run: |
          cp -r $GITHUB_WORKSPACE "copiedProject"
          ls -F "copiedProject"
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-
      - name: Run Unity Tests
        run: |
          # Run Unity tests here
          # Example command:
          # unity -batchmode -projectPath ${{ matrix.projectPath }} -runTests -testPlatform ${{ matrix.testMode }}
          echo "Running Unity tests in ${{ matrix.testMode }}"
      - uses: game-ci/unity-test-runner@v3
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          # Adjust coverage options as needed
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}
