name: Unity Continuous Integration Workflow

on:
  push:
    branches:
      - main

jobs:
  unity_tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        projectPath: [EngineeringThesis]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2.4.0
        with:
          lfs: true
        env:
          node-version: 16

      - name: Cache Unity Library
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/Library
          key: Library-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            Library-${{ runner.os }}-
      - name: copy dir to new dir
        run: |
          pwd
          folderName=$(echo "${PWD##*/}")
          rsync -r "$GITHUB_WORKSPACE" "copiedProject" 
          ls -F "copiedProject/$folderName"

      - name: Run Unity Tests
        id: runUnityTests
        uses: game-ci/unity-test-runner@v3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          projectPath: ./copiedProject/${{ matrix.projectPath }}
          testMode: all
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport'

      - name: Upload Test Coverage Results
        uses: actions/upload-artifact@v2
        with:
          name: Test Coverage Results (all)
          path: ${{ steps.runUnityTests.outputs.coveragePath }}

  unity_build:
    needs: unity_tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2.4.0
        with:
          lfs: true
        env:
          node-version: 16

      - name: Cache Unity Library
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/Library
            ${{ github.workspace }}/Assets
            ${{ github.workspace }}/ProjectSettings
          key: Library-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            Library-${{ runner.os }}-

      - name: Build Unity Project
        uses: game-ci/unity-builder@v3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          #projectPath: ./copiedProject/${{ matrix.projectPath }}

      - name: Upload Unity Build
        uses: actions/upload-artifact@v2
        with:
          name: Unity Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
